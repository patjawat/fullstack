import { __awaiter, __generator } from "tslib";
var Response = /** @class */ (function () {
    /**
     * Create a new response instance.
     */
    function Response(model, config, response) {
        /**
         * Entities created by Vuex ORM.
         */
        this.entities = null;
        /**
         * Whether if response data is saved to the store or not.
         */
        this.isSaved = false;
        this.model = model;
        this.config = config;
        this.response = response;
    }
    /**
     * Save response data to the store.
     */
    Response.prototype.save = function () {
        return __awaiter(this, void 0, void 0, function () {
            var data, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        data = this.getDataFromResponse();
                        if (!this.validateData(data)) {
                            console.warn('[Vuex ORM Axios] The response data could not be saved to the store because it\'s not an object or an array. You might want to use `dataTransformer` option to handle non-array/object response before saving it to the store.');
                            return [2 /*return*/];
                        }
                        _a = this;
                        return [4 /*yield*/, this.model.insertOrUpdate({ data: data })];
                    case 1:
                        _a.entities = _b.sent();
                        this.isSaved = true;
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Delete store record depending on `delete` option.
     */
    Response.prototype.delete = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this.config.delete === undefined) {
                            throw new Error('[Vuex ORM Axios] Could not delete records because the `delete` option is not set.');
                        }
                        return [4 /*yield*/, this.model.delete(this.config.delete)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Get data from the given response object. If the `dataTransformer` config is
     * provided, it tries to execute the method with the response as param. If the
     * `dataKey` config is provided, it tries to fetch the data at that key.
     */
    Response.prototype.getDataFromResponse = function () {
        if (this.config.dataTransformer) {
            return this.config.dataTransformer(this.response);
        }
        if (this.config.dataKey) {
            return this.response.data[this.config.dataKey];
        }
        return this.response.data;
    };
    /**
     * Validate if the given data is insertable to Vuex ORM.
     */
    Response.prototype.validateData = function (data) {
        return data !== null && typeof data === 'object';
    };
    return Response;
}());
export default Response;
//# sourceMappingURL=Response.js.map