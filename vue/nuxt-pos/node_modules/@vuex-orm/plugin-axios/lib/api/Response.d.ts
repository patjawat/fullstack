import { AxiosResponse } from 'axios';
import { Model, Collections } from '@vuex-orm/core';
import Config from '../contracts/Config';
export default class Response {
    /**
     * The model that called the request.
     */
    model: typeof Model;
    /**
     * The request configuration.
     */
    config: Config;
    /**
     * The axios response instance.
     */
    response: AxiosResponse;
    /**
     * Entities created by Vuex ORM.
     */
    entities: Collections | null;
    /**
     * Whether if response data is saved to the store or not.
     */
    isSaved: boolean;
    /**
     * Create a new response instance.
     */
    constructor(model: typeof Model, config: Config, response: AxiosResponse);
    /**
     * Save response data to the store.
     */
    save(): Promise<void>;
    /**
     * Delete store record depending on `delete` option.
     */
    delete(): Promise<void>;
    /**
     * Get data from the given response object. If the `dataTransformer` config is
     * provided, it tries to execute the method with the response as param. If the
     * `dataKey` config is provided, it tries to fetch the data at that key.
     */
    private getDataFromResponse;
    /**
     * Validate if the given data is insertable to Vuex ORM.
     */
    private validateData;
}
