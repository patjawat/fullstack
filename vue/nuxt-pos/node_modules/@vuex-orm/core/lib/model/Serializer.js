import Model from './Model';
var Serializer = /** @class */ (function () {
    function Serializer() {
    }
    /**
     * Serialize given model fields value to json.
     */
    Serializer.serialize = function (model) {
        var _this = this;
        var keys = Object.keys(model.$fields());
        return keys.reduce(function (record, key) {
            var value = model[key];
            record[key] = _this.serializeValue(value);
            return record;
        }, {});
    };
    /**
     * Serialize given value.
     */
    Serializer.serializeValue = function (value) {
        if (value instanceof Model) {
            return this.serializeItem(value);
        }
        if (Array.isArray(value)) {
            return this.serializeCollection(value);
        }
        return value;
    };
    /**
     * Serialize an item into json.
     */
    Serializer.serializeItem = function (item) {
        return item.$toJson();
    };
    /**
     * Serialize a collection into json.
     */
    Serializer.serializeCollection = function (collection) {
        return collection.map(function (item) {
            if (item instanceof Model) {
                return item.$toJson();
            }
            return item;
        });
    };
    return Serializer;
}());
export default Serializer;
//# sourceMappingURL=Serializer.js.map