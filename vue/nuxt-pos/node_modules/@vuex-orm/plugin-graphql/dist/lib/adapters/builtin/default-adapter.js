"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var adapter_1 = require("../adapter");
var utils_1 = require("../../support/utils");
var DefaultAdapter = /** @class */ (function () {
    function DefaultAdapter() {
    }
    DefaultAdapter.prototype.getRootMutationName = function () {
        return "Mutation";
    };
    DefaultAdapter.prototype.getRootQueryName = function () {
        return "Query";
    };
    DefaultAdapter.prototype.getConnectionMode = function () {
        return adapter_1.ConnectionMode.NODES;
    };
    DefaultAdapter.prototype.getArgumentMode = function () {
        return adapter_1.ArgumentMode.TYPE;
    };
    DefaultAdapter.prototype.getFilterTypeName = function (model) {
        return utils_1.upcaseFirstLetter(model.singularName) + "Filter";
    };
    DefaultAdapter.prototype.getInputTypeName = function (model, action) {
        return utils_1.upcaseFirstLetter(model.singularName) + "Input";
    };
    DefaultAdapter.prototype.getNameForDestroy = function (model) {
        return "delete" + utils_1.upcaseFirstLetter(model.singularName);
    };
    DefaultAdapter.prototype.getNameForFetch = function (model, plural) {
        return plural ? model.pluralName : model.singularName;
    };
    DefaultAdapter.prototype.getNameForPersist = function (model) {
        return "create" + utils_1.upcaseFirstLetter(model.singularName);
    };
    DefaultAdapter.prototype.getNameForPush = function (model) {
        return "update" + utils_1.upcaseFirstLetter(model.singularName);
    };
    DefaultAdapter.prototype.prepareSchemaTypeName = function (name) {
        return utils_1.upcaseFirstLetter(name);
    };
    return DefaultAdapter;
}());
exports.default = DefaultAdapter;
//# sourceMappingURL=default-adapter.js.map